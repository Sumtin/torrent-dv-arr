networks:
  t3_proxy:
    driver: bridge

services:
  proxy:
    image: traefik:v3.4.0         # Review traefik documentation https://doc.traefik.io/traefik/ 
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.network=t3_proxy
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      # - --log.level=DEBUG
    # Mandatory. Must be on same network as VPN.
    networks: 
      - t3_proxy
    ports:
      - 80:80          # Traefik proxy
      - 8080:8080      # Traefik Web UI, enabled by api.insecure=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  # VPN - Gluetun
  vpn:
    container_name: vpn
    image: qmcgaw/gluetun
    # Mandatory. Must be on same network as proxy.
    networks: 
      - t3_proxy     
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # Must list all ports for all client services
    ports:
      - 5555:5555      # qBittorrent WEBUI_PORT value
      - 6881:6881      # qBittorrent default
      - 6881:6881/udp  # qBittorrent default
      - 8989:8989      # Sonarr
      - 7878:7878      # Radarr
      - 6767:6767      # Bazarr
      - 9696:9696      # Prowlarr
    environment:
      - VPN_PORT_FORWARDING=${VPN_PORT_FORWARDING}
      - VPN_PORT_FORWARDING_PROVIDER=${VPN_PROVIDER}
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${VPN_ACTIVATION_CODE}
      - SERVER_COUNTRIES=${VPN_COUNTRY}
      # Command below used to update qBittorrent port (useful if VPN provider assigns random port for port forwarding)
      # Details here: https://github.com/qdm12/gluetun-wiki/blob/main/setup/advanced/vpn-port-forwarding.md#qbittorrent-example
      - VPN_PORT_FORWARDING_UP_COMMAND=/bin/sh -c 'wget -O- --retry-connrefused --post-data "json={\"listen_port\":{{PORTS}}}" http://localhost:5555/api/v2/app/setPreferences 2>&1'
    restart: always   

  # qBittorrent (routes through VPN)
  torrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - WEBUI_PORT=5555
    volumes:
      - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}:/config
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.torrent.loadbalancer.server.port=5555
      - traefik.http.routers.torrent.rule=Host(`torrents.${DOMAIN_NAME}`)  
    restart: always    
    depends_on:
      - vpn
      - proxy

  # Sonarr (TV)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${MOUNT_TO_LOCAL_VOLUME_STORE}/${HOST_NAME}/Sonarr:/config
      - ${MOUNT_TO_TV}:/tv # Update if mount is in different location
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.rule=Host(`tv.${DOMAIN_NAME}`)  
    restart: always
    depends_on:
      - proxy
      - vpn
      
  # Radarr (Movies)
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${MOUNT_TO_LOCAL_VOLUME_STORE}/${HOST_NAME}/Radarr:/config
      - ${MOUNT_TO_MOVIES}:/movies # Update if mount is in different location
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.rule=Host(`movies.${DOMAIN_NAME}`)  
    restart: always
    depends_on:
      - vpn
      - proxy

  # # Bazarr (Subtitles for Movie and TV)
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${MOUNT_TO_LOCAL_VOLUME_STORE}/${HOST_NAME}/Bazarr:/config
      - ${MOUNT_TO_MOVIES}:/movies # Update if mount is in different location
      - ${MOUNT_TO_TV}:/tv # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.rule=Host(`subtitles.${DOMAIN_NAME}`)  
    restart: always
    depends_on:
      - vpn
      - proxy

  # Prowlarr - Torrent Indexer Manager - Replaces Jackett
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${MOUNT_TO_LOCAL_VOLUME_STORE}/${HOST_NAME}/Prowlarr:/config
    labels:
      - traefik.enable=true
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.rule=Host(`indexers.${DOMAIN_NAME}`)        
    restart: always
    depends_on:
      - vpn
      - proxy
  
  # Watchtower - Auto update all containers
  watchtower:
    container_name: watchtower
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - 'WATCHTOWER_NOTIFICATION_URL=${SHOUTRR_SERVICE_URL}'
      - 'WATCHTOWER_NOTIFICATION_TEMPLATE={{range .}}{{.Time.Format \2006-01-02'
    image: containrrr/watchtower
    restart: always

  # Popular Auto-Downloader (IRC/RSS monitor)
  # autobrr:
  #   container_name: autobrr
  #   image: ghcr.io/autobrr/autobrr:latest
  #   restart: always
  #   logging:
  #    driver: json-file
  #    options:
  #      max-file: 5
  #      max-size: 5
  #   user: 1000:1000
  #   environment:
  #     - TZ=${TIMEZONE}
  #     #- AUTOBRR__LOG_PATH=${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/autobrr/logs
  #     #- AUTOBRR__LOG_MAX_SIZE=10 #MB
  #     #- AUTOBRR__LOG_MAX_BACKUPS=5
  #   volumes:
  #     - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/autobrr/config:/config
  #   ports:
  #     - 7474:7474