services:

  proxy:
    image: traefik:latest         # Review traefik documentation https://doc.traefik.io/traefik/ 
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    # List ports for all containers
    ports:
      - 80:80          # Traefik proxy
      - 8080:8080      # Traefik Web UI, enabled by api.insecure=true
      - 5555:5555      # qBittorrent WEBUI_PORT value
      - 6881:6881      # qBittorrent default
      - 6881:6881/udp  # qBittorrent default
      - 8989:8989      # Sonarr
      - 7878:7878      # Radarr
      - 6767:6767      # Bazarr
      - 9117:9117      # Jackett
      - 8191:8191      # Flaresolverr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  # VPN - Gluetun
  vpn:
    container_name: vpn
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_PORT_FORWARDING=on
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${VPN_ACTIVATION_CODE}
      - SERVER_COUNTRIES=${VPN_COUNTRY}
    restart: unless-stopped
    

  # qBittorrent (routes through VPN)
  torrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - WEBUI_PORT=5555
    volumes:
      - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}:/config
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.torrent.loadbalancer.server.port=5555
      - traefik.http.routers.torrent.rule=Path(`/torrent`)
    restart: unless-stopped    
    depends_on:
      - vpn
      - proxy

  # Sonarr (TV)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - Sonarr:/config
      - ${MOUNT_TO_TV}:/tv # Update if mount is in different location
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.rule=Path(`/tv`)            
    restart: unless-stopped
    depends_on:
      - vpn
      - proxy

  # Radarr (Movies)
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - Radarr:/config
      - ${MOUNT_TO_MOVIES}:/movies # Update if mount is in different location
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.rule=Path(`/movies`)            
    restart: unless-stopped
    depends_on:
      - vpn
      - proxy

  # Bazarr (Subtitles for Movie and TV)
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/bazarr:/config
      - ${MOUNT_TO_MOVIES}:/movies # Update if mount is in different location
      - ${MOUNT_TO_TV}:/tv # Update if mount is in different location
    labels:
      - traefik.enable=true
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.rule=Path(`/subtitles`)
    restart: unless-stopped
    depends_on:
      - vpn
      - proxy

  # Jackett (allows usenet bots like Sonarr and Radarr to use torrent sites) - Need to investigate Prowlarr
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    network_mode: container:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/jackett:/config
      - ${MOUNT_TO_BTDOWNLOADS}:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - traefik.http.routers.jackett.rule=Path(`/jackett`)
    restart: unless-stopped
    depends_on:
      - vpn
      - proxy

  # Flaresolverr (only needed if torrent site behind CloudFlare proxy)
  flaresolverr:
    container_name: flaresolverr
    image: 21hsmw/flaresolverr:nodriver
    network_mode: container:vpn
    environment:
        - DRIVER=nodriver
        - TZ=${TIMEZONE}
    labels:
      - traefik.enable=true
      - traefik.http.services.flaresolverr.loadbalancer.server.port=8191
      - traefik.http.routers.flaresolverr.rule=Path(`/flaresolverr`)        
    restart: unless-stopped
    depends_on:
      - vpn
      - proxy
  
  # Watchtower - Auto update all containers
  watchtower:
    container_name: watchtower
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - 'WATCHTOWER_NOTIFICATION_URL=${SHOUTRR_SERVICE_URL}'
      - 'WATCHTOWER_NOTIFICATION_TEMPLATE={{range .}}{{.Time.Format \2006-01-02'
    image: containrrr/watchtower
    restart: unless-stopped


  # Popular Auto-Downloader (IRC/RSS monitor)
  # autobrr:
  #   container_name: autobrr
  #   image: ghcr.io/autobrr/autobrr:latest
  #   restart: unless-stopped
  #   logging:
  #    driver: json-file
  #    options:
  #      max-file: 5
  #      max-size: 5
  #   user: 1000:1000
  #   environment:
  #     - TZ=${TIMEZONE}
  #     #- AUTOBRR__LOG_PATH=${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/autobrr/logs
  #     #- AUTOBRR__LOG_MAX_SIZE=10 #MB
  #     #- AUTOBRR__LOG_MAX_BACKUPS=5
  #   volumes:
  #     - ${MOUNT_TO_REMOTE_VOLUME_STORE}/${HOST_NAME}/autobrr/config:/config
  #   ports:
  #     - 7474:7474

# Create local volume mounts
volumes:
  Radarr:
  Sonarr:
